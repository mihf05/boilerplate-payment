generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique
  password    String
  name        String
  role        Role       @default(USER)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  invoices    Invoice[]
}

enum Role {
  ADMIN
  USER
}

model Payment {
  id            String     @id @default(uuid())
  amount        Float
  currency      String
  provider      String
  status        PaymentStatus
  transactionId String     @unique
  metadata      Json?
  createdAt     DateTime   @default(now())

  invoice       Invoice?
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
  REFUNDED
}

model Invoice {
  id          String     @id @default(uuid())
  paymentId   String?    @unique
  userId      String
  amount      Float
  status      InvoiceStatus
  dueDate     DateTime
  issuedAt    DateTime   @default(now())
  paidAt      DateTime?

  payment     Payment?   @relation(fields: [paymentId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
}

enum InvoiceStatus {
  UNPAID
  PAID
  OVERDUE
}

model EmailLog {
  id          String     @id @default(uuid())
  to          String
  subject     String
  body        String
  sentAt      DateTime   @default(now())
}

model SMSLog {
  id          String     @id @default(uuid())
  to          String
  message     String
  sentAt      DateTime   @default(now())
}

model CurrencyRate {
  id          String     @id @default(uuid())
  base        String
  target      String
  rate        Float
  updatedAt   DateTime   @default(now())
}
